#compdef n

local curcontext="$curcontext" state line cmds ret=1

_arguments -C \
	'1: :->cmds' \
	'*: :->args' && ret=0
echo $state
# case $state in
# 	cmds)
# 		cmds=( ${(f)"$(_call_program commands rvm help 2> /dev/null | sed -e '/^Action/,/^Implementation/!d; / - /!d; s/^[ *]*\([^ ]*\) *\- *\(.*\)/\1:\2/')"} )
# 		cmds+=( $(rvm list strings) )
# 		_describe -t commands 'rvm command' cmds && ret=0
# 		;;
# 	args)
# 		case $line[1] in
# 			(use|uninstall|remove|list)
# 				_values -S , 'rubies' $(rvm list strings | sed -e 's/ruby-\([^) ]*\)-\([^) ]*\)/ruby-\1-\2 \1-\2 \1/g') default system && ret=0
# 				;;
# 			(install|fetch)
# 				_values -S , 'rubies' $(rvm list known_strings) && ret=0
# 				;;
# 			gemset)
# 				if (( CURRENT == 3 )); then
# 					_values 'gemset_commands' $(rvm gemset | sed -e '/create/!d; s/^.*[{]\(.*\)[}].*$/\1/; s/,/ /g')
# 				else
# 					_values -S , 'gemsets' $(rvm gemset list | \grep -v gemset 2>/dev/null)
# 				fi
# 				ret=0
# 				;;
# 			package)
# 				if (( CURRENT == 3 )); then
# 					_values 'package_commands' $(rvm package | sed -e '/Usage/!d; s/^.*[{]\(.*\)[}] [{].*$/\1/; s/,/ /g')
# 				else
# 					_values 'packages' $(rvm package | sed -e '/Usage/!d; s/^.*[}] [{]\(.*\)[}].*$/\1/; s/,/ /g')
# 				fi
# 				ret=0
# 				;;
# 			*)
# 				(( ret )) && _message 'no more arguments'
# 				;;
# 		esac
# 		;;
# esac
# 
return ret
